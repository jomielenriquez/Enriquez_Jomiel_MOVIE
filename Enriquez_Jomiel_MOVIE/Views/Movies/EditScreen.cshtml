@model Enriquez_Jomiel_MOVIE.Models.App
@{
    ViewBag.Title = "EditScreen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="alert alert-dismissible alert-danger @(String.IsNullOrEmpty(Model.ErrorMessage)?"hidden":"")">
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    <h4 class="alert-heading">Error!!!</h4>
    <p class="mb-0">@Model.ErrorMessage</p>
</div>
<div class="card" style="">
    <div class="card-header">@ViewBag.EditScreenHeader</div>
    <div class="card-body">
        @using (Html.BeginForm("Update", "Movies", FormMethod.Post, new { @name = "MoviesForm" }))
        {
            <fieldset>
                @* Add class row if viewing *@
                @Html.TextBoxFor(model => model.SelectedMovie.MOVIEID, new { @class = "hidden", @id = "MOVIEID" })
                
                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Name</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextBoxFor(model => model.SelectedMovie.NAME, new { @class = "form-control", @id = "NAME" })
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Description</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @Html.TextAreaFor(model => model.SelectedMovie.DESCRITPION, new { @class = "form-control", @id = "DESCRITPION", @row = "10" , @style="height:300px"})
                    </div>
                </div>

                <div class="form-group row margin_bottom_10">
                    <label for="Name" class="col-sm-2 col-form-label">Category</label>
                    <div class="col-sm-10">
                        @* class should be form-control-plaintext when viewing *@
                        @{
                            var Category = new List<SelectListItem>();
                            foreach (var category in Model.CategoryList)
                            {
                                Category.Add(new SelectListItem { Text = category.NAME, Value = category.CATEGORYID.ToString() });
                            }
                        }
                        @Html.DropDownListFor(model => model.SelectedMovie.CATEGORYID, Category, "Select Category", new { @class = "form-select", @id = "CATEGORYID" })
                    </div>
                </div>

                <button type="submit" class="btn btn-success" href=""><i class="icon-save"></i>  Save</button>
                <a class="btn btn-primary" href="@Url.Action("ListScreen","Movies")"><i class="icon-chevron-left"></i>  Back</a>
            </fieldset>
        }

    </div>
</div>